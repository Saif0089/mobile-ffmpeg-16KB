name: Build Android FFmpeg (NDK r28c, cached, 16KB safe)

on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_NDK_ROOT: ${{ github.workspace }}/android-ndk-r28c
      API_LEVEL: 30 # Android 11 minSdk
      TARGET_SDK: 35 # Android 15 target

    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed for git describe

      - name: Prepare git submodules
        run: |
          sudo apt-get install -y git
          git submodule sync
          git submodule update --init --recursive

      - name: Set up Java (Gradle)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Android NDK r28c
        id: cache-ndk
        uses: actions/cache@v4
        with:
          path: ${{ env.ANDROID_NDK_ROOT }}
          key: ndk-r28c-linux

      - name: Download and extract NDK r28c (if not cached)
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        run: |
          echo "‚¨áÔ∏è Downloading NDK r28c..."
          wget https://dl.google.com/android/repository/android-ndk-r28c-linux.zip -O ndk.zip
          unzip -q ndk.zip
          echo "‚úÖ NDK r28c extracted to $ANDROID_NDK_ROOT"

      # ‚úÖ Force-save the NDK cache immediately after extraction
      - name: Save NDK cache (force upload)
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ env.ANDROID_NDK_ROOT }}
          key: ndk-r28c-linux

      - name: Install build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y git unzip zip curl build-essential python3 openjdk-17-jdk

      - name: Patch Gradle SDK versions (if present)
        run: |
          if [ -f android/app/build.gradle ]; then
            sed -i 's/targetSdkVersion [0-9]\+/targetSdkVersion 35/' android/app/build.gradle
            sed -i 's/minSdkVersion [0-9]\+/minSdkVersion 30/' android/app/build.gradle
          fi

      - name: Make build script executable
        run: chmod +x android.sh

      - name: Build FFmpeg (arm64-only, API 30)
        run: |
          export ANDROID_NDK_HOME=$ANDROID_NDK_ROOT
          export PATH=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          export API=$API_LEVEL
          ./android.sh -d --lts --full --enable-gpl --disable-arm-v7a

      - name: Show build log (if exists)
        if: always()
        run: |
          echo "üßæ build.log output:"
          if [ -f build.log ]; then
            cat build.log | tail -n 200
          else
            echo "‚ö†Ô∏è build.log not found in root, trying subdirectories..."
            find . -type f -name build.log -exec echo "Found:" {} \; -exec tail -n 200 {} \;
          fi

      - name: Archive prebuilt AAR
        if: success()
        run: |
          mkdir -p build-output
          cp -r prebuilt/android-aar/* build-output/
          echo "‚úÖ AAR copied to build-output"

      - name: Upload AAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: mobile-ffmpeg-ndk-r28c-arm64
          path: build-output
